@*@model IEnumerable<Auction.Models.Item>*@
@model List<Auction.Models.Item>
@{
    ViewBag.Title = "AddWinningBidsSilent";
}

<body id="BackgroundGrad1">
    <h1 class="CrudTitle">Silent Auction</h1>
    <h2 id="Theme">Enter Winning Bids</h2>
    <table class="table" id="IndexTable">
        <tr>
            <td>
                <h4>Number</h4>
            </td>
            <td>
                <h4>Item</h4>
            </td>
            <td>
                <h4>Description</h4>
            </td>
            <td>
                <h4>Winning Bidder #</h4>
            </td>
            <td>
                <h4>Bid Amount</h4>
            </td>
            <td></td>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>


                @if (item.WinningBidder == null || item.WinningBidder == 0)
                {
                    <td>
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.WinningBidder, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.WinningBidder, "", new { @class = "text-danger" })
                        </div>
                    </td>
                }
                else
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.WinningBidder)
                    </td>
                }

                @if (item.BidAmount == null || item.BidAmount == 0)
                {
                    <td>
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.BidAmount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.BidAmount, "", new { @class = "text-danger" })
                        </div>
                    </td>

                }
                else
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.BidAmount)
                    </td>
                }

                <td>
                    @if((item.BidAmount == null || item.BidAmount == 0)&&(item.WinningBidder == null || item.WinningBidder == 0))
                    { 
                    <div> Submit button </div>
                    }
                    else
                    {
                        <div > @Html.ActionLink("Edit", "EditSilentItem",  new { id = item.ID }) </div>
                    } 
                     
                </td>
                @*<td>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BidAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.BidAmount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BidAmount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            @Html.LabelFor(model => model.WinningBidder, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.WinningBidder, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.WinningBidder, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>*@
                @*<td>
                         |
                        @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                    </td>*@
            </tr>
        }

    </table>
</body>