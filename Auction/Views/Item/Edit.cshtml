@using Auction.Models
@model Auction.Models.Item


<style>
    footer {
        position: absolute;
        bottom: 0;
        width: 80%;
    }
</style>

<body id="BackgroundGrad1"  class="full">
    <hgroup class="title">
        <h1 class="CrudTitle">Edit Item @Html.DisplayFor(Item => Item.ID)</h1>
        
    </hgroup>
    @using (Html.BeginForm("Edit", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div id="itemInfo" style="float: left; width: 60%;">
            <div class="form-horizontal">


                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.ItemNumber)
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, 5, 40, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BidAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BidAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BidAmount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.WinningBidder, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.WinningBidder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WinningBidder, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.AuctionType, htmlAttributes: new { @class = "control-label col-md-2" })

                    @if (Model.AuctionType == 1)
                    {
                        <div class="col-md-3">
                            <select name="AuctionType" style="font-size:16px">
                                <option value="1"> Live </option>
                                <option value="2"> Silent </option>
                            </select>
                            @Html.ValidationMessageFor(model => model.AuctionType, "", new { @class = "text-danger" })
                        </div>
                    }
                    else
                    {
                        <div class="col-md-3">
                            <select name="AuctionType" style="font-size:16px">
                                <option value="2"> Silent </option>
                                <option value="1"> Live </option>
                            </select>
                            @Html.ValidationMessageFor(model => model.AuctionType, "", new { @class = "text-danger" })
                        </div>
                    }
                    



                    @*<div class="col-md-10">
                        @Html.EditorFor(model => model.AuctionType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AuctionType, "", new { @class = "text-danger" })
                    </div>*@



                </div>
            </div>

        </div>



                <!--Image upload code. Donot Delete. Donot Modify-->
        <div id="imgUpload" style="float: right;width: 40%;">

            @if (File.Exists(Server.MapPath("~/Images/Items/"
                                    + Html.DisplayFor(modelItem => Model.ImageURL))))
            {
                <img alt="" src="~/Images/Items/@Html.DisplayFor(modelItem   => Model.ImageURL)" width="400" />


                <br />
                <p>
                    If the image above is not the correct image,
                    use the Re-Upload form below.
                </p>
                <label for="photo">Re-Upload:</label>
                <input id="photo" type="file" name="photo" />
                <input type="hidden" name="image" value="@Html.DisplayFor(modelItem   => Model.ImageURL)" />

            }
            else
            {
                <img alt="" src="~/Images/Items/default.png" width="300" />
                <br />
                <p>
                    This is a defualt image. If you would like to upload an image, use the form below.
                </p>
                <label for="photo">Upload a Photo:</label>
                <input id="photo" type="file" name="photo" />
                <input type="hidden" name="image" value="@Html.DisplayFor(modelItem   => Model.ImageURL)" />

            }
        </div>
                    <!--Image upload code. Donot Delete. Donot Modify-->

        <br />
        <br />
        <br />
        <br />

        <div class="medium-12 column" style="position: absolute;
bottom: 70px; width: 300px; margin-left: auto;margin-right: auto;left: 40%; right: 40%; ">
            <input class="btn btn-default" type="submit" value="Save" />
            <input type="submit" value="Cancel" onclick="location.href='@Url.Action("Index#" + Model.ItemNumber, "Item")';return false;" class="btn btn-default" />
        </div>



    }


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</body>
