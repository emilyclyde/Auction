@model Auction.Models.Item

<hgroup class="title">
    <h1>Edit Items</h1>
    <hr />
        </hgroup>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div id="itemInfo" style="float: left; width: 60%;">
                <div class="form-horizontal">


                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.ID)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BidAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BidAmount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BidAmount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.WinningBidder, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.WinningBidder, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WinningBidder, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="medium-12 column">
                        <input class="tiny button" type="submit" value="Save" />
                        @Html.ActionLink("Back to List", "Index", null,
                            new {@class = "tiny button"})
                    </div>
                </div>
            </div>

        }
<!--Image upload code. Donot Delete. Donot Modify-->
<div id="imgUpload" style="float: right;width: 40%;">

    @if (File.Exists(Server.MapPath("~/Images/Items/"
                                    + Html.DisplayFor(modelItem => Model.ImageURL))))
    {
        <img alt="" src="~/Images/Items/@Html.DisplayFor(modelItem   => Model.ImageURL)" />
        <form action="/Item/DeletePhoto" method="post" name="deletePhoto">
            @Html.AntiForgeryToken()
            <br />
            If the image above is not the correct image,
            hit delete and Re-Upload.
            <br />
            <input type="text" name="photoFileName" value="@Html.DisplayFor(modelItem          => Model.ImageURL)" />

            <input class="tiny button" type="submit" value="Delete" />
        </form>
    }
    else
    {
        <form action="/Item/UploadPhoto" enctype="multipart/form-data" method="post">
            <label for="photo">Upload a Photo:</label>
            <input class="tiny button" id="photo" type="file" name="photo" />
            <input class="tiny button" type="submit" value="Upload" />
            <input type="hidden" name="image" value="@Html.DisplayFor(modelItem   => Model.ImageURL)" />
        </form>
    }
</div>
<!--Image upload code. Donot Delete. Donot Modify-->
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }